// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_TRINITYSCENEOBJECT_PKNX_STRUCTURES_FLATBUFFERS_SV_TRINITY_H_
#define FLATBUFFERS_GENERATED_TRINITYSCENEOBJECT_PKNX_STRUCTURES_FLATBUFFERS_SV_TRINITY_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 24 &&
              FLATBUFFERS_VERSION_MINOR == 3 &&
              FLATBUFFERS_VERSION_REVISION == 25,
             "Non-compatible flatbuffers version included");

#include "PackedVec3f_generated.h"

namespace pkNX {
namespace Structures {
namespace FlatBuffers {
namespace SV {
namespace Trinity {

struct SubScene;
struct SubSceneBuilder;

struct TIFieldComponent;
struct TIFieldComponentBuilder;

struct TIPokemonModelComponent;
struct TIPokemonModelComponentBuilder;

struct TIFieldPokemonComponent;
struct TIFieldPokemonComponentBuilder;

struct TIFieldAttributePickerComponent;
struct TIFieldAttributePickerComponentBuilder;

struct PEAudioGeneratorComponent;
struct PEAudioGeneratorComponentBuilder;

struct TrinityCollisionEventTriggerComponent;
struct TrinityCollisionEventTriggerComponentBuilder;

struct PEFlatbuffersDataComponentInner;
struct PEFlatbuffersDataComponentInnerBuilder;

struct PEFlatbuffersDataComponent;
struct PEFlatbuffersDataComponentBuilder;

struct TrinityObjectSwitcher;
struct TrinityObjectSwitcherBuilder;

struct TrinityScriptComponent;
struct TrinityScriptComponentBuilder;

struct TrinitySceneObjectPosition;
struct TrinitySceneObjectPositionBuilder;

struct TrinitySceneObject;
struct TrinitySceneObjectBuilder;

struct TrinityCharacterCreationMasterComponent;
struct TrinityCharacterCreationMasterComponentBuilder;

struct TrinityCharacterCreationMasterComponentInner;
struct TrinityCharacterCreationMasterComponentInnerBuilder;

struct SubScene FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef SubSceneBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_FIELD_00 = 4,
    VT_FIELD_01 = 6
  };
  const ::flatbuffers::String *Field_00() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_00);
  }
  const ::flatbuffers::String *Field_01() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_01);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_FIELD_00) &&
           verifier.VerifyString(Field_00()) &&
           VerifyOffsetRequired(verifier, VT_FIELD_01) &&
           verifier.VerifyString(Field_01()) &&
           verifier.EndTable();
  }
};

struct SubSceneBuilder {
  typedef SubScene Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_Field_00(::flatbuffers::Offset<::flatbuffers::String> Field_00) {
    fbb_.AddOffset(SubScene::VT_FIELD_00, Field_00);
  }
  void add_Field_01(::flatbuffers::Offset<::flatbuffers::String> Field_01) {
    fbb_.AddOffset(SubScene::VT_FIELD_01, Field_01);
  }
  explicit SubSceneBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<SubScene> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<SubScene>(end);
    fbb_.Required(o, SubScene::VT_FIELD_00);
    fbb_.Required(o, SubScene::VT_FIELD_01);
    return o;
  }
};

inline ::flatbuffers::Offset<SubScene> CreateSubScene(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    ::flatbuffers::Offset<::flatbuffers::String> Field_00 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Field_01 = 0) {
  SubSceneBuilder builder_(_fbb);
  builder_.add_Field_01(Field_01);
  builder_.add_Field_00(Field_00);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<SubScene> CreateSubSceneDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const char *Field_00 = nullptr,
    const char *Field_01 = nullptr) {
  auto Field_00__ = Field_00 ? _fbb.CreateString(Field_00) : 0;
  auto Field_01__ = Field_01 ? _fbb.CreateString(Field_01) : 0;
  return pkNX::Structures::FlatBuffers::SV::Trinity::CreateSubScene(
      _fbb,
      Field_00__,
      Field_01__);
}

struct TIFieldComponent FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef TIFieldComponentBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_FIELD_00 = 4,
    VT_FIELD_01 = 6,
    VT_FIELD_02 = 8,
    VT_FIELD_03 = 10,
    VT_FIELD_04 = 12
  };
  uint32_t Field_00() const {
    return GetField<uint32_t>(VT_FIELD_00, 0);
  }
  uint32_t Field_01() const {
    return GetField<uint32_t>(VT_FIELD_01, 0);
  }
  uint32_t Field_02() const {
    return GetField<uint32_t>(VT_FIELD_02, 0);
  }
  uint32_t Field_03() const {
    return GetField<uint32_t>(VT_FIELD_03, 0);
  }
  uint32_t Field_04() const {
    return GetField<uint32_t>(VT_FIELD_04, 0);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_00, 4) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_01, 4) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_02, 4) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_03, 4) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_04, 4) &&
           verifier.EndTable();
  }
};

struct TIFieldComponentBuilder {
  typedef TIFieldComponent Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_Field_00(uint32_t Field_00) {
    fbb_.AddElement<uint32_t>(TIFieldComponent::VT_FIELD_00, Field_00, 0);
  }
  void add_Field_01(uint32_t Field_01) {
    fbb_.AddElement<uint32_t>(TIFieldComponent::VT_FIELD_01, Field_01, 0);
  }
  void add_Field_02(uint32_t Field_02) {
    fbb_.AddElement<uint32_t>(TIFieldComponent::VT_FIELD_02, Field_02, 0);
  }
  void add_Field_03(uint32_t Field_03) {
    fbb_.AddElement<uint32_t>(TIFieldComponent::VT_FIELD_03, Field_03, 0);
  }
  void add_Field_04(uint32_t Field_04) {
    fbb_.AddElement<uint32_t>(TIFieldComponent::VT_FIELD_04, Field_04, 0);
  }
  explicit TIFieldComponentBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TIFieldComponent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TIFieldComponent>(end);
    return o;
  }
};

inline ::flatbuffers::Offset<TIFieldComponent> CreateTIFieldComponent(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    uint32_t Field_00 = 0,
    uint32_t Field_01 = 0,
    uint32_t Field_02 = 0,
    uint32_t Field_03 = 0,
    uint32_t Field_04 = 0) {
  TIFieldComponentBuilder builder_(_fbb);
  builder_.add_Field_04(Field_04);
  builder_.add_Field_03(Field_03);
  builder_.add_Field_02(Field_02);
  builder_.add_Field_01(Field_01);
  builder_.add_Field_00(Field_00);
  return builder_.Finish();
}

struct TIPokemonModelComponent FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef TIPokemonModelComponentBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_DEVID = 4,
    VT_FORMID = 6,
    VT_SEX = 8,
    VT_RARE = 10,
    VT_FIELD_04 = 12,
    VT_FIELD_05 = 14,
    VT_FIELD_06 = 16,
    VT_FIELD_07 = 18,
    VT_FIELD_08 = 20
  };
  uint16_t DevId() const {
    return GetField<uint16_t>(VT_DEVID, 0);
  }
  uint16_t FormId() const {
    return GetField<uint16_t>(VT_FORMID, 0);
  }
  int8_t Sex() const {
    return GetField<int8_t>(VT_SEX, 0);
  }
  int8_t Rare() const {
    return GetField<int8_t>(VT_RARE, 0);
  }
  int8_t Field_04() const {
    return GetField<int8_t>(VT_FIELD_04, 0);
  }
  int8_t Field_05() const {
    return GetField<int8_t>(VT_FIELD_05, 0);
  }
  int8_t Field_06() const {
    return GetField<int8_t>(VT_FIELD_06, 0);
  }
  int8_t Field_07() const {
    return GetField<int8_t>(VT_FIELD_07, 0);
  }
  bool Field_08() const {
    return GetField<uint8_t>(VT_FIELD_08, 0) != 0;
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint16_t>(verifier, VT_DEVID, 2) &&
           VerifyField<uint16_t>(verifier, VT_FORMID, 2) &&
           VerifyField<int8_t>(verifier, VT_SEX, 1) &&
           VerifyField<int8_t>(verifier, VT_RARE, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_04, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_05, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_06, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_07, 1) &&
           VerifyField<uint8_t>(verifier, VT_FIELD_08, 1) &&
           verifier.EndTable();
  }
};

struct TIPokemonModelComponentBuilder {
  typedef TIPokemonModelComponent Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_DevId(uint16_t DevId) {
    fbb_.AddElement<uint16_t>(TIPokemonModelComponent::VT_DEVID, DevId, 0);
  }
  void add_FormId(uint16_t FormId) {
    fbb_.AddElement<uint16_t>(TIPokemonModelComponent::VT_FORMID, FormId, 0);
  }
  void add_Sex(int8_t Sex) {
    fbb_.AddElement<int8_t>(TIPokemonModelComponent::VT_SEX, Sex, 0);
  }
  void add_Rare(int8_t Rare) {
    fbb_.AddElement<int8_t>(TIPokemonModelComponent::VT_RARE, Rare, 0);
  }
  void add_Field_04(int8_t Field_04) {
    fbb_.AddElement<int8_t>(TIPokemonModelComponent::VT_FIELD_04, Field_04, 0);
  }
  void add_Field_05(int8_t Field_05) {
    fbb_.AddElement<int8_t>(TIPokemonModelComponent::VT_FIELD_05, Field_05, 0);
  }
  void add_Field_06(int8_t Field_06) {
    fbb_.AddElement<int8_t>(TIPokemonModelComponent::VT_FIELD_06, Field_06, 0);
  }
  void add_Field_07(int8_t Field_07) {
    fbb_.AddElement<int8_t>(TIPokemonModelComponent::VT_FIELD_07, Field_07, 0);
  }
  void add_Field_08(bool Field_08) {
    fbb_.AddElement<uint8_t>(TIPokemonModelComponent::VT_FIELD_08, static_cast<uint8_t>(Field_08), 0);
  }
  explicit TIPokemonModelComponentBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TIPokemonModelComponent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TIPokemonModelComponent>(end);
    return o;
  }
};

inline ::flatbuffers::Offset<TIPokemonModelComponent> CreateTIPokemonModelComponent(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    uint16_t DevId = 0,
    uint16_t FormId = 0,
    int8_t Sex = 0,
    int8_t Rare = 0,
    int8_t Field_04 = 0,
    int8_t Field_05 = 0,
    int8_t Field_06 = 0,
    int8_t Field_07 = 0,
    bool Field_08 = false) {
  TIPokemonModelComponentBuilder builder_(_fbb);
  builder_.add_FormId(FormId);
  builder_.add_DevId(DevId);
  builder_.add_Field_08(Field_08);
  builder_.add_Field_07(Field_07);
  builder_.add_Field_06(Field_06);
  builder_.add_Field_05(Field_05);
  builder_.add_Field_04(Field_04);
  builder_.add_Rare(Rare);
  builder_.add_Sex(Sex);
  return builder_.Finish();
}

struct TIFieldPokemonComponent FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef TIFieldPokemonComponentBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_DEVID = 4,
    VT_FORMID = 6,
    VT_SEX = 8,
    VT_RARE = 10,
    VT_FIELD_04 = 12,
    VT_FIELD_05 = 14,
    VT_FIELD_06 = 16,
    VT_FIELD_07 = 18,
    VT_FIELD_08 = 20
  };
  uint16_t DevId() const {
    return GetField<uint16_t>(VT_DEVID, 0);
  }
  uint16_t FormId() const {
    return GetField<uint16_t>(VT_FORMID, 0);
  }
  int8_t Sex() const {
    return GetField<int8_t>(VT_SEX, 0);
  }
  int8_t Rare() const {
    return GetField<int8_t>(VT_RARE, 0);
  }
  int8_t Field_04() const {
    return GetField<int8_t>(VT_FIELD_04, 0);
  }
  int8_t Field_05() const {
    return GetField<int8_t>(VT_FIELD_05, 0);
  }
  int8_t Field_06() const {
    return GetField<int8_t>(VT_FIELD_06, 0);
  }
  int8_t Field_07() const {
    return GetField<int8_t>(VT_FIELD_07, 0);
  }
  bool Field_08() const {
    return GetField<uint8_t>(VT_FIELD_08, 0) != 0;
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint16_t>(verifier, VT_DEVID, 2) &&
           VerifyField<uint16_t>(verifier, VT_FORMID, 2) &&
           VerifyField<int8_t>(verifier, VT_SEX, 1) &&
           VerifyField<int8_t>(verifier, VT_RARE, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_04, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_05, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_06, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_07, 1) &&
           VerifyField<uint8_t>(verifier, VT_FIELD_08, 1) &&
           verifier.EndTable();
  }
};

struct TIFieldPokemonComponentBuilder {
  typedef TIFieldPokemonComponent Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_DevId(uint16_t DevId) {
    fbb_.AddElement<uint16_t>(TIFieldPokemonComponent::VT_DEVID, DevId, 0);
  }
  void add_FormId(uint16_t FormId) {
    fbb_.AddElement<uint16_t>(TIFieldPokemonComponent::VT_FORMID, FormId, 0);
  }
  void add_Sex(int8_t Sex) {
    fbb_.AddElement<int8_t>(TIFieldPokemonComponent::VT_SEX, Sex, 0);
  }
  void add_Rare(int8_t Rare) {
    fbb_.AddElement<int8_t>(TIFieldPokemonComponent::VT_RARE, Rare, 0);
  }
  void add_Field_04(int8_t Field_04) {
    fbb_.AddElement<int8_t>(TIFieldPokemonComponent::VT_FIELD_04, Field_04, 0);
  }
  void add_Field_05(int8_t Field_05) {
    fbb_.AddElement<int8_t>(TIFieldPokemonComponent::VT_FIELD_05, Field_05, 0);
  }
  void add_Field_06(int8_t Field_06) {
    fbb_.AddElement<int8_t>(TIFieldPokemonComponent::VT_FIELD_06, Field_06, 0);
  }
  void add_Field_07(int8_t Field_07) {
    fbb_.AddElement<int8_t>(TIFieldPokemonComponent::VT_FIELD_07, Field_07, 0);
  }
  void add_Field_08(bool Field_08) {
    fbb_.AddElement<uint8_t>(TIFieldPokemonComponent::VT_FIELD_08, static_cast<uint8_t>(Field_08), 0);
  }
  explicit TIFieldPokemonComponentBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TIFieldPokemonComponent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TIFieldPokemonComponent>(end);
    return o;
  }
};

inline ::flatbuffers::Offset<TIFieldPokemonComponent> CreateTIFieldPokemonComponent(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    uint16_t DevId = 0,
    uint16_t FormId = 0,
    int8_t Sex = 0,
    int8_t Rare = 0,
    int8_t Field_04 = 0,
    int8_t Field_05 = 0,
    int8_t Field_06 = 0,
    int8_t Field_07 = 0,
    bool Field_08 = false) {
  TIFieldPokemonComponentBuilder builder_(_fbb);
  builder_.add_FormId(FormId);
  builder_.add_DevId(DevId);
  builder_.add_Field_08(Field_08);
  builder_.add_Field_07(Field_07);
  builder_.add_Field_06(Field_06);
  builder_.add_Field_05(Field_05);
  builder_.add_Field_04(Field_04);
  builder_.add_Rare(Rare);
  builder_.add_Sex(Sex);
  return builder_.Finish();
}

struct TIFieldAttributePickerComponent FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef TIFieldAttributePickerComponentBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_FIELD_00 = 4,
    VT_FIELD_01 = 6,
    VT_FIELD_02 = 8,
    VT_FIELD_03 = 10
  };
  float Field_00() const {
    return GetField<float>(VT_FIELD_00, 0.0f);
  }
  bool Field_01() const {
    return GetField<uint8_t>(VT_FIELD_01, 0) != 0;
  }
  float Field_02() const {
    return GetField<float>(VT_FIELD_02, 0.0f);
  }
  float Field_03() const {
    return GetField<float>(VT_FIELD_03, 0.0f);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<float>(verifier, VT_FIELD_00, 4) &&
           VerifyField<uint8_t>(verifier, VT_FIELD_01, 1) &&
           VerifyField<float>(verifier, VT_FIELD_02, 4) &&
           VerifyField<float>(verifier, VT_FIELD_03, 4) &&
           verifier.EndTable();
  }
};

struct TIFieldAttributePickerComponentBuilder {
  typedef TIFieldAttributePickerComponent Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_Field_00(float Field_00) {
    fbb_.AddElement<float>(TIFieldAttributePickerComponent::VT_FIELD_00, Field_00, 0.0f);
  }
  void add_Field_01(bool Field_01) {
    fbb_.AddElement<uint8_t>(TIFieldAttributePickerComponent::VT_FIELD_01, static_cast<uint8_t>(Field_01), 0);
  }
  void add_Field_02(float Field_02) {
    fbb_.AddElement<float>(TIFieldAttributePickerComponent::VT_FIELD_02, Field_02, 0.0f);
  }
  void add_Field_03(float Field_03) {
    fbb_.AddElement<float>(TIFieldAttributePickerComponent::VT_FIELD_03, Field_03, 0.0f);
  }
  explicit TIFieldAttributePickerComponentBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TIFieldAttributePickerComponent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TIFieldAttributePickerComponent>(end);
    return o;
  }
};

inline ::flatbuffers::Offset<TIFieldAttributePickerComponent> CreateTIFieldAttributePickerComponent(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    float Field_00 = 0.0f,
    bool Field_01 = false,
    float Field_02 = 0.0f,
    float Field_03 = 0.0f) {
  TIFieldAttributePickerComponentBuilder builder_(_fbb);
  builder_.add_Field_03(Field_03);
  builder_.add_Field_02(Field_02);
  builder_.add_Field_00(Field_00);
  builder_.add_Field_01(Field_01);
  return builder_.Finish();
}

struct PEAudioGeneratorComponent FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef PEAudioGeneratorComponentBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_FIELD_00 = 4,
    VT_FIELD_01 = 6,
    VT_FIELD_02 = 8,
    VT_FIELD_03 = 10,
    VT_FIELD_04 = 12,
    VT_FIELD_05 = 14,
    VT_FIELD_06 = 16,
    VT_FIELD_07 = 18,
    VT_FIELD_08 = 20,
    VT_FIELD_09 = 22,
    VT_FIELD_10 = 24,
    VT_FIELD_11 = 26,
    VT_FIELD_12 = 28
  };
  const ::flatbuffers::String *Field_00() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_00);
  }
  const ::flatbuffers::String *Field_01() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_01);
  }
  int8_t Field_02() const {
    return GetField<int8_t>(VT_FIELD_02, 0);
  }
  int8_t Field_03() const {
    return GetField<int8_t>(VT_FIELD_03, 0);
  }
  int8_t Field_04() const {
    return GetField<int8_t>(VT_FIELD_04, 0);
  }
  int8_t Field_05() const {
    return GetField<int8_t>(VT_FIELD_05, 0);
  }
  float Field_06() const {
    return GetField<float>(VT_FIELD_06, 0.0f);
  }
  uint32_t Field_07() const {
    return GetField<uint32_t>(VT_FIELD_07, 0);
  }
  int8_t Field_08() const {
    return GetField<int8_t>(VT_FIELD_08, 0);
  }
  const ::flatbuffers::Vector<float> *Field_09() const {
    return GetPointer<const ::flatbuffers::Vector<float> *>(VT_FIELD_09);
  }
  int8_t Field_10() const {
    return GetField<int8_t>(VT_FIELD_10, 0);
  }
  int8_t Field_11() const {
    return GetField<int8_t>(VT_FIELD_11, 0);
  }
  const ::flatbuffers::String *Field_12() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_12);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_FIELD_00) &&
           verifier.VerifyString(Field_00()) &&
           VerifyOffsetRequired(verifier, VT_FIELD_01) &&
           verifier.VerifyString(Field_01()) &&
           VerifyField<int8_t>(verifier, VT_FIELD_02, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_03, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_04, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_05, 1) &&
           VerifyField<float>(verifier, VT_FIELD_06, 4) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_07, 4) &&
           VerifyField<int8_t>(verifier, VT_FIELD_08, 1) &&
           VerifyOffset(verifier, VT_FIELD_09) &&
           verifier.VerifyVector(Field_09()) &&
           VerifyField<int8_t>(verifier, VT_FIELD_10, 1) &&
           VerifyField<int8_t>(verifier, VT_FIELD_11, 1) &&
           VerifyOffsetRequired(verifier, VT_FIELD_12) &&
           verifier.VerifyString(Field_12()) &&
           verifier.EndTable();
  }
};

struct PEAudioGeneratorComponentBuilder {
  typedef PEAudioGeneratorComponent Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_Field_00(::flatbuffers::Offset<::flatbuffers::String> Field_00) {
    fbb_.AddOffset(PEAudioGeneratorComponent::VT_FIELD_00, Field_00);
  }
  void add_Field_01(::flatbuffers::Offset<::flatbuffers::String> Field_01) {
    fbb_.AddOffset(PEAudioGeneratorComponent::VT_FIELD_01, Field_01);
  }
  void add_Field_02(int8_t Field_02) {
    fbb_.AddElement<int8_t>(PEAudioGeneratorComponent::VT_FIELD_02, Field_02, 0);
  }
  void add_Field_03(int8_t Field_03) {
    fbb_.AddElement<int8_t>(PEAudioGeneratorComponent::VT_FIELD_03, Field_03, 0);
  }
  void add_Field_04(int8_t Field_04) {
    fbb_.AddElement<int8_t>(PEAudioGeneratorComponent::VT_FIELD_04, Field_04, 0);
  }
  void add_Field_05(int8_t Field_05) {
    fbb_.AddElement<int8_t>(PEAudioGeneratorComponent::VT_FIELD_05, Field_05, 0);
  }
  void add_Field_06(float Field_06) {
    fbb_.AddElement<float>(PEAudioGeneratorComponent::VT_FIELD_06, Field_06, 0.0f);
  }
  void add_Field_07(uint32_t Field_07) {
    fbb_.AddElement<uint32_t>(PEAudioGeneratorComponent::VT_FIELD_07, Field_07, 0);
  }
  void add_Field_08(int8_t Field_08) {
    fbb_.AddElement<int8_t>(PEAudioGeneratorComponent::VT_FIELD_08, Field_08, 0);
  }
  void add_Field_09(::flatbuffers::Offset<::flatbuffers::Vector<float>> Field_09) {
    fbb_.AddOffset(PEAudioGeneratorComponent::VT_FIELD_09, Field_09);
  }
  void add_Field_10(int8_t Field_10) {
    fbb_.AddElement<int8_t>(PEAudioGeneratorComponent::VT_FIELD_10, Field_10, 0);
  }
  void add_Field_11(int8_t Field_11) {
    fbb_.AddElement<int8_t>(PEAudioGeneratorComponent::VT_FIELD_11, Field_11, 0);
  }
  void add_Field_12(::flatbuffers::Offset<::flatbuffers::String> Field_12) {
    fbb_.AddOffset(PEAudioGeneratorComponent::VT_FIELD_12, Field_12);
  }
  explicit PEAudioGeneratorComponentBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<PEAudioGeneratorComponent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<PEAudioGeneratorComponent>(end);
    fbb_.Required(o, PEAudioGeneratorComponent::VT_FIELD_00);
    fbb_.Required(o, PEAudioGeneratorComponent::VT_FIELD_01);
    fbb_.Required(o, PEAudioGeneratorComponent::VT_FIELD_12);
    return o;
  }
};

inline ::flatbuffers::Offset<PEAudioGeneratorComponent> CreatePEAudioGeneratorComponent(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    ::flatbuffers::Offset<::flatbuffers::String> Field_00 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Field_01 = 0,
    int8_t Field_02 = 0,
    int8_t Field_03 = 0,
    int8_t Field_04 = 0,
    int8_t Field_05 = 0,
    float Field_06 = 0.0f,
    uint32_t Field_07 = 0,
    int8_t Field_08 = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<float>> Field_09 = 0,
    int8_t Field_10 = 0,
    int8_t Field_11 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Field_12 = 0) {
  PEAudioGeneratorComponentBuilder builder_(_fbb);
  builder_.add_Field_12(Field_12);
  builder_.add_Field_09(Field_09);
  builder_.add_Field_07(Field_07);
  builder_.add_Field_06(Field_06);
  builder_.add_Field_01(Field_01);
  builder_.add_Field_00(Field_00);
  builder_.add_Field_11(Field_11);
  builder_.add_Field_10(Field_10);
  builder_.add_Field_08(Field_08);
  builder_.add_Field_05(Field_05);
  builder_.add_Field_04(Field_04);
  builder_.add_Field_03(Field_03);
  builder_.add_Field_02(Field_02);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<PEAudioGeneratorComponent> CreatePEAudioGeneratorComponentDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const char *Field_00 = nullptr,
    const char *Field_01 = nullptr,
    int8_t Field_02 = 0,
    int8_t Field_03 = 0,
    int8_t Field_04 = 0,
    int8_t Field_05 = 0,
    float Field_06 = 0.0f,
    uint32_t Field_07 = 0,
    int8_t Field_08 = 0,
    const std::vector<float> *Field_09 = nullptr,
    int8_t Field_10 = 0,
    int8_t Field_11 = 0,
    const char *Field_12 = nullptr) {
  auto Field_00__ = Field_00 ? _fbb.CreateString(Field_00) : 0;
  auto Field_01__ = Field_01 ? _fbb.CreateString(Field_01) : 0;
  auto Field_09__ = Field_09 ? _fbb.CreateVector<float>(*Field_09) : 0;
  auto Field_12__ = Field_12 ? _fbb.CreateString(Field_12) : 0;
  return pkNX::Structures::FlatBuffers::SV::Trinity::CreatePEAudioGeneratorComponent(
      _fbb,
      Field_00__,
      Field_01__,
      Field_02,
      Field_03,
      Field_04,
      Field_05,
      Field_06,
      Field_07,
      Field_08,
      Field_09__,
      Field_10,
      Field_11,
      Field_12__);
}

struct TrinityCollisionEventTriggerComponent FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef TrinityCollisionEventTriggerComponentBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_FIELD_00 = 4,
    VT_FIELD_01 = 6,
    VT_FIELD_02 = 8,
    VT_FIELD_03 = 10,
    VT_FIELD_04 = 12,
    VT_FIELD_05 = 14
  };
  const ::flatbuffers::String *Field_00() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_00);
  }
  const ::flatbuffers::String *Field_01() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_01);
  }
  int8_t Field_02() const {
    return GetField<int8_t>(VT_FIELD_02, 0);
  }
  uint32_t Field_03() const {
    return GetField<uint32_t>(VT_FIELD_03, 0);
  }
  const ::flatbuffers::String *Field_04() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_04);
  }
  const ::flatbuffers::String *Field_05() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_05);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_FIELD_00) &&
           verifier.VerifyString(Field_00()) &&
           VerifyOffsetRequired(verifier, VT_FIELD_01) &&
           verifier.VerifyString(Field_01()) &&
           VerifyField<int8_t>(verifier, VT_FIELD_02, 1) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_03, 4) &&
           VerifyOffsetRequired(verifier, VT_FIELD_04) &&
           verifier.VerifyString(Field_04()) &&
           VerifyOffsetRequired(verifier, VT_FIELD_05) &&
           verifier.VerifyString(Field_05()) &&
           verifier.EndTable();
  }
};

struct TrinityCollisionEventTriggerComponentBuilder {
  typedef TrinityCollisionEventTriggerComponent Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_Field_00(::flatbuffers::Offset<::flatbuffers::String> Field_00) {
    fbb_.AddOffset(TrinityCollisionEventTriggerComponent::VT_FIELD_00, Field_00);
  }
  void add_Field_01(::flatbuffers::Offset<::flatbuffers::String> Field_01) {
    fbb_.AddOffset(TrinityCollisionEventTriggerComponent::VT_FIELD_01, Field_01);
  }
  void add_Field_02(int8_t Field_02) {
    fbb_.AddElement<int8_t>(TrinityCollisionEventTriggerComponent::VT_FIELD_02, Field_02, 0);
  }
  void add_Field_03(uint32_t Field_03) {
    fbb_.AddElement<uint32_t>(TrinityCollisionEventTriggerComponent::VT_FIELD_03, Field_03, 0);
  }
  void add_Field_04(::flatbuffers::Offset<::flatbuffers::String> Field_04) {
    fbb_.AddOffset(TrinityCollisionEventTriggerComponent::VT_FIELD_04, Field_04);
  }
  void add_Field_05(::flatbuffers::Offset<::flatbuffers::String> Field_05) {
    fbb_.AddOffset(TrinityCollisionEventTriggerComponent::VT_FIELD_05, Field_05);
  }
  explicit TrinityCollisionEventTriggerComponentBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TrinityCollisionEventTriggerComponent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TrinityCollisionEventTriggerComponent>(end);
    fbb_.Required(o, TrinityCollisionEventTriggerComponent::VT_FIELD_00);
    fbb_.Required(o, TrinityCollisionEventTriggerComponent::VT_FIELD_01);
    fbb_.Required(o, TrinityCollisionEventTriggerComponent::VT_FIELD_04);
    fbb_.Required(o, TrinityCollisionEventTriggerComponent::VT_FIELD_05);
    return o;
  }
};

inline ::flatbuffers::Offset<TrinityCollisionEventTriggerComponent> CreateTrinityCollisionEventTriggerComponent(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    ::flatbuffers::Offset<::flatbuffers::String> Field_00 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Field_01 = 0,
    int8_t Field_02 = 0,
    uint32_t Field_03 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Field_04 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Field_05 = 0) {
  TrinityCollisionEventTriggerComponentBuilder builder_(_fbb);
  builder_.add_Field_05(Field_05);
  builder_.add_Field_04(Field_04);
  builder_.add_Field_03(Field_03);
  builder_.add_Field_01(Field_01);
  builder_.add_Field_00(Field_00);
  builder_.add_Field_02(Field_02);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<TrinityCollisionEventTriggerComponent> CreateTrinityCollisionEventTriggerComponentDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const char *Field_00 = nullptr,
    const char *Field_01 = nullptr,
    int8_t Field_02 = 0,
    uint32_t Field_03 = 0,
    const char *Field_04 = nullptr,
    const char *Field_05 = nullptr) {
  auto Field_00__ = Field_00 ? _fbb.CreateString(Field_00) : 0;
  auto Field_01__ = Field_01 ? _fbb.CreateString(Field_01) : 0;
  auto Field_04__ = Field_04 ? _fbb.CreateString(Field_04) : 0;
  auto Field_05__ = Field_05 ? _fbb.CreateString(Field_05) : 0;
  return pkNX::Structures::FlatBuffers::SV::Trinity::CreateTrinityCollisionEventTriggerComponent(
      _fbb,
      Field_00__,
      Field_01__,
      Field_02,
      Field_03,
      Field_04__,
      Field_05__);
}

struct PEFlatbuffersDataComponentInner FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef PEFlatbuffersDataComponentInnerBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_FIELD_00 = 4,
    VT_FIELD_01 = 6
  };
  const ::flatbuffers::String *Field_00() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_00);
  }
  const ::flatbuffers::String *Field_01() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_01);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_FIELD_00) &&
           verifier.VerifyString(Field_00()) &&
           VerifyOffsetRequired(verifier, VT_FIELD_01) &&
           verifier.VerifyString(Field_01()) &&
           verifier.EndTable();
  }
};

struct PEFlatbuffersDataComponentInnerBuilder {
  typedef PEFlatbuffersDataComponentInner Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_Field_00(::flatbuffers::Offset<::flatbuffers::String> Field_00) {
    fbb_.AddOffset(PEFlatbuffersDataComponentInner::VT_FIELD_00, Field_00);
  }
  void add_Field_01(::flatbuffers::Offset<::flatbuffers::String> Field_01) {
    fbb_.AddOffset(PEFlatbuffersDataComponentInner::VT_FIELD_01, Field_01);
  }
  explicit PEFlatbuffersDataComponentInnerBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<PEFlatbuffersDataComponentInner> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<PEFlatbuffersDataComponentInner>(end);
    fbb_.Required(o, PEFlatbuffersDataComponentInner::VT_FIELD_00);
    fbb_.Required(o, PEFlatbuffersDataComponentInner::VT_FIELD_01);
    return o;
  }
};

inline ::flatbuffers::Offset<PEFlatbuffersDataComponentInner> CreatePEFlatbuffersDataComponentInner(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    ::flatbuffers::Offset<::flatbuffers::String> Field_00 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Field_01 = 0) {
  PEFlatbuffersDataComponentInnerBuilder builder_(_fbb);
  builder_.add_Field_01(Field_01);
  builder_.add_Field_00(Field_00);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<PEFlatbuffersDataComponentInner> CreatePEFlatbuffersDataComponentInnerDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const char *Field_00 = nullptr,
    const char *Field_01 = nullptr) {
  auto Field_00__ = Field_00 ? _fbb.CreateString(Field_00) : 0;
  auto Field_01__ = Field_01 ? _fbb.CreateString(Field_01) : 0;
  return pkNX::Structures::FlatBuffers::SV::Trinity::CreatePEFlatbuffersDataComponentInner(
      _fbb,
      Field_00__,
      Field_01__);
}

struct PEFlatbuffersDataComponent FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef PEFlatbuffersDataComponentBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_FIELD_00 = 4,
    VT_FIELD_01 = 6
  };
  const ::flatbuffers::String *Field_00() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_00);
  }
  const ::flatbuffers::Vector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::PEFlatbuffersDataComponentInner>> *Field_01() const {
    return GetPointer<const ::flatbuffers::Vector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::PEFlatbuffersDataComponentInner>> *>(VT_FIELD_01);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_FIELD_00) &&
           verifier.VerifyString(Field_00()) &&
           VerifyOffset(verifier, VT_FIELD_01) &&
           verifier.VerifyVector(Field_01()) &&
           verifier.VerifyVectorOfTables(Field_01()) &&
           verifier.EndTable();
  }
};

struct PEFlatbuffersDataComponentBuilder {
  typedef PEFlatbuffersDataComponent Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_Field_00(::flatbuffers::Offset<::flatbuffers::String> Field_00) {
    fbb_.AddOffset(PEFlatbuffersDataComponent::VT_FIELD_00, Field_00);
  }
  void add_Field_01(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::PEFlatbuffersDataComponentInner>>> Field_01) {
    fbb_.AddOffset(PEFlatbuffersDataComponent::VT_FIELD_01, Field_01);
  }
  explicit PEFlatbuffersDataComponentBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<PEFlatbuffersDataComponent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<PEFlatbuffersDataComponent>(end);
    fbb_.Required(o, PEFlatbuffersDataComponent::VT_FIELD_00);
    return o;
  }
};

inline ::flatbuffers::Offset<PEFlatbuffersDataComponent> CreatePEFlatbuffersDataComponent(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    ::flatbuffers::Offset<::flatbuffers::String> Field_00 = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::PEFlatbuffersDataComponentInner>>> Field_01 = 0) {
  PEFlatbuffersDataComponentBuilder builder_(_fbb);
  builder_.add_Field_01(Field_01);
  builder_.add_Field_00(Field_00);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<PEFlatbuffersDataComponent> CreatePEFlatbuffersDataComponentDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const char *Field_00 = nullptr,
    const std::vector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::PEFlatbuffersDataComponentInner>> *Field_01 = nullptr) {
  auto Field_00__ = Field_00 ? _fbb.CreateString(Field_00) : 0;
  auto Field_01__ = Field_01 ? _fbb.CreateVector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::PEFlatbuffersDataComponentInner>>(*Field_01) : 0;
  return pkNX::Structures::FlatBuffers::SV::Trinity::CreatePEFlatbuffersDataComponent(
      _fbb,
      Field_00__,
      Field_01__);
}

struct TrinityObjectSwitcher FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef TrinityObjectSwitcherBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_FIELD_00 = 4,
    VT_FIELD_01 = 6
  };
  const ::flatbuffers::String *Field_00() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_00);
  }
  const ::flatbuffers::String *Field_01() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_01);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_FIELD_00) &&
           verifier.VerifyString(Field_00()) &&
           VerifyOffsetRequired(verifier, VT_FIELD_01) &&
           verifier.VerifyString(Field_01()) &&
           verifier.EndTable();
  }
};

struct TrinityObjectSwitcherBuilder {
  typedef TrinityObjectSwitcher Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_Field_00(::flatbuffers::Offset<::flatbuffers::String> Field_00) {
    fbb_.AddOffset(TrinityObjectSwitcher::VT_FIELD_00, Field_00);
  }
  void add_Field_01(::flatbuffers::Offset<::flatbuffers::String> Field_01) {
    fbb_.AddOffset(TrinityObjectSwitcher::VT_FIELD_01, Field_01);
  }
  explicit TrinityObjectSwitcherBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TrinityObjectSwitcher> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TrinityObjectSwitcher>(end);
    fbb_.Required(o, TrinityObjectSwitcher::VT_FIELD_00);
    fbb_.Required(o, TrinityObjectSwitcher::VT_FIELD_01);
    return o;
  }
};

inline ::flatbuffers::Offset<TrinityObjectSwitcher> CreateTrinityObjectSwitcher(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    ::flatbuffers::Offset<::flatbuffers::String> Field_00 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Field_01 = 0) {
  TrinityObjectSwitcherBuilder builder_(_fbb);
  builder_.add_Field_01(Field_01);
  builder_.add_Field_00(Field_00);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<TrinityObjectSwitcher> CreateTrinityObjectSwitcherDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const char *Field_00 = nullptr,
    const char *Field_01 = nullptr) {
  auto Field_00__ = Field_00 ? _fbb.CreateString(Field_00) : 0;
  auto Field_01__ = Field_01 ? _fbb.CreateString(Field_01) : 0;
  return pkNX::Structures::FlatBuffers::SV::Trinity::CreateTrinityObjectSwitcher(
      _fbb,
      Field_00__,
      Field_01__);
}

struct TrinityScriptComponent FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef TrinityScriptComponentBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_SCRIPTFILENAME = 4,
    VT_SCRIPTFILENAMEHASH = 6,
    VT_FIELD_02 = 8,
    VT_FIELD_03 = 10,
    VT_FIELD_04 = 12,
    VT_SCRIPTFILECLASS = 14
  };
  const ::flatbuffers::String *ScriptFileName() const {
    return GetPointer<const ::flatbuffers::String *>(VT_SCRIPTFILENAME);
  }
  const ::flatbuffers::String *ScriptFileNameHash() const {
    return GetPointer<const ::flatbuffers::String *>(VT_SCRIPTFILENAMEHASH);
  }
  uint32_t Field_02() const {
    return GetField<uint32_t>(VT_FIELD_02, 0);
  }
  uint32_t Field_03() const {
    return GetField<uint32_t>(VT_FIELD_03, 0);
  }
  uint32_t Field_04() const {
    return GetField<uint32_t>(VT_FIELD_04, 0);
  }
  const ::flatbuffers::String *ScriptFileClass() const {
    return GetPointer<const ::flatbuffers::String *>(VT_SCRIPTFILECLASS);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_SCRIPTFILENAME) &&
           verifier.VerifyString(ScriptFileName()) &&
           VerifyOffsetRequired(verifier, VT_SCRIPTFILENAMEHASH) &&
           verifier.VerifyString(ScriptFileNameHash()) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_02, 4) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_03, 4) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_04, 4) &&
           VerifyOffsetRequired(verifier, VT_SCRIPTFILECLASS) &&
           verifier.VerifyString(ScriptFileClass()) &&
           verifier.EndTable();
  }
};

struct TrinityScriptComponentBuilder {
  typedef TrinityScriptComponent Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_ScriptFileName(::flatbuffers::Offset<::flatbuffers::String> ScriptFileName) {
    fbb_.AddOffset(TrinityScriptComponent::VT_SCRIPTFILENAME, ScriptFileName);
  }
  void add_ScriptFileNameHash(::flatbuffers::Offset<::flatbuffers::String> ScriptFileNameHash) {
    fbb_.AddOffset(TrinityScriptComponent::VT_SCRIPTFILENAMEHASH, ScriptFileNameHash);
  }
  void add_Field_02(uint32_t Field_02) {
    fbb_.AddElement<uint32_t>(TrinityScriptComponent::VT_FIELD_02, Field_02, 0);
  }
  void add_Field_03(uint32_t Field_03) {
    fbb_.AddElement<uint32_t>(TrinityScriptComponent::VT_FIELD_03, Field_03, 0);
  }
  void add_Field_04(uint32_t Field_04) {
    fbb_.AddElement<uint32_t>(TrinityScriptComponent::VT_FIELD_04, Field_04, 0);
  }
  void add_ScriptFileClass(::flatbuffers::Offset<::flatbuffers::String> ScriptFileClass) {
    fbb_.AddOffset(TrinityScriptComponent::VT_SCRIPTFILECLASS, ScriptFileClass);
  }
  explicit TrinityScriptComponentBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TrinityScriptComponent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TrinityScriptComponent>(end);
    fbb_.Required(o, TrinityScriptComponent::VT_SCRIPTFILENAME);
    fbb_.Required(o, TrinityScriptComponent::VT_SCRIPTFILENAMEHASH);
    fbb_.Required(o, TrinityScriptComponent::VT_SCRIPTFILECLASS);
    return o;
  }
};

inline ::flatbuffers::Offset<TrinityScriptComponent> CreateTrinityScriptComponent(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    ::flatbuffers::Offset<::flatbuffers::String> ScriptFileName = 0,
    ::flatbuffers::Offset<::flatbuffers::String> ScriptFileNameHash = 0,
    uint32_t Field_02 = 0,
    uint32_t Field_03 = 0,
    uint32_t Field_04 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> ScriptFileClass = 0) {
  TrinityScriptComponentBuilder builder_(_fbb);
  builder_.add_ScriptFileClass(ScriptFileClass);
  builder_.add_Field_04(Field_04);
  builder_.add_Field_03(Field_03);
  builder_.add_Field_02(Field_02);
  builder_.add_ScriptFileNameHash(ScriptFileNameHash);
  builder_.add_ScriptFileName(ScriptFileName);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<TrinityScriptComponent> CreateTrinityScriptComponentDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const char *ScriptFileName = nullptr,
    const char *ScriptFileNameHash = nullptr,
    uint32_t Field_02 = 0,
    uint32_t Field_03 = 0,
    uint32_t Field_04 = 0,
    const char *ScriptFileClass = nullptr) {
  auto ScriptFileName__ = ScriptFileName ? _fbb.CreateString(ScriptFileName) : 0;
  auto ScriptFileNameHash__ = ScriptFileNameHash ? _fbb.CreateString(ScriptFileNameHash) : 0;
  auto ScriptFileClass__ = ScriptFileClass ? _fbb.CreateString(ScriptFileClass) : 0;
  return pkNX::Structures::FlatBuffers::SV::Trinity::CreateTrinityScriptComponent(
      _fbb,
      ScriptFileName__,
      ScriptFileNameHash__,
      Field_02,
      Field_03,
      Field_04,
      ScriptFileClass__);
}

struct TrinitySceneObjectPosition FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef TrinitySceneObjectPositionBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_FIELD_00 = 4,
    VT_FIELD_01 = 6,
    VT_FIELD_02 = 8
  };
  const pkNX::Structures::FlatBuffers::PackedVec3f *Field_00() const {
    return GetStruct<const pkNX::Structures::FlatBuffers::PackedVec3f *>(VT_FIELD_00);
  }
  const pkNX::Structures::FlatBuffers::PackedVec3f *Field_01() const {
    return GetStruct<const pkNX::Structures::FlatBuffers::PackedVec3f *>(VT_FIELD_01);
  }
  const pkNX::Structures::FlatBuffers::PackedVec3f *Field_02() const {
    return GetStruct<const pkNX::Structures::FlatBuffers::PackedVec3f *>(VT_FIELD_02);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyFieldRequired<pkNX::Structures::FlatBuffers::PackedVec3f>(verifier, VT_FIELD_00, 4) &&
           VerifyFieldRequired<pkNX::Structures::FlatBuffers::PackedVec3f>(verifier, VT_FIELD_01, 4) &&
           VerifyFieldRequired<pkNX::Structures::FlatBuffers::PackedVec3f>(verifier, VT_FIELD_02, 4) &&
           verifier.EndTable();
  }
};

struct TrinitySceneObjectPositionBuilder {
  typedef TrinitySceneObjectPosition Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_Field_00(const pkNX::Structures::FlatBuffers::PackedVec3f *Field_00) {
    fbb_.AddStruct(TrinitySceneObjectPosition::VT_FIELD_00, Field_00);
  }
  void add_Field_01(const pkNX::Structures::FlatBuffers::PackedVec3f *Field_01) {
    fbb_.AddStruct(TrinitySceneObjectPosition::VT_FIELD_01, Field_01);
  }
  void add_Field_02(const pkNX::Structures::FlatBuffers::PackedVec3f *Field_02) {
    fbb_.AddStruct(TrinitySceneObjectPosition::VT_FIELD_02, Field_02);
  }
  explicit TrinitySceneObjectPositionBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TrinitySceneObjectPosition> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TrinitySceneObjectPosition>(end);
    fbb_.Required(o, TrinitySceneObjectPosition::VT_FIELD_00);
    fbb_.Required(o, TrinitySceneObjectPosition::VT_FIELD_01);
    fbb_.Required(o, TrinitySceneObjectPosition::VT_FIELD_02);
    return o;
  }
};

inline ::flatbuffers::Offset<TrinitySceneObjectPosition> CreateTrinitySceneObjectPosition(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const pkNX::Structures::FlatBuffers::PackedVec3f *Field_00 = nullptr,
    const pkNX::Structures::FlatBuffers::PackedVec3f *Field_01 = nullptr,
    const pkNX::Structures::FlatBuffers::PackedVec3f *Field_02 = nullptr) {
  TrinitySceneObjectPositionBuilder builder_(_fbb);
  builder_.add_Field_02(Field_02);
  builder_.add_Field_01(Field_01);
  builder_.add_Field_00(Field_00);
  return builder_.Finish();
}

struct TrinitySceneObject FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef TrinitySceneObjectBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_OBJECTNAME = 4,
    VT_OBJECTPOSITION = 6,
    VT_FIELD_02 = 8,
    VT_FIELD_03 = 10,
    VT_FIELD_04 = 12,
    VT_FIELD_05 = 14,
    VT_FIELD_06 = 16,
    VT_FIELD_07 = 18,
    VT_FIELD_08 = 20
  };
  const ::flatbuffers::String *ObjectName() const {
    return GetPointer<const ::flatbuffers::String *>(VT_OBJECTNAME);
  }
  const pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObjectPosition *ObjectPosition() const {
    return GetPointer<const pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObjectPosition *>(VT_OBJECTPOSITION);
  }
  uint32_t Field_02() const {
    return GetField<uint32_t>(VT_FIELD_02, 0);
  }
  uint32_t Field_03() const {
    return GetField<uint32_t>(VT_FIELD_03, 0);
  }
  const ::flatbuffers::String *Field_04() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_04);
  }
  uint8_t Field_05() const {
    return GetField<uint8_t>(VT_FIELD_05, 0);
  }
  uint32_t Field_06() const {
    return GetField<uint32_t>(VT_FIELD_06, 0);
  }
  const ::flatbuffers::String *Field_07() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_07);
  }
  const ::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>> *Field_08() const {
    return GetPointer<const ::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>> *>(VT_FIELD_08);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_OBJECTNAME) &&
           verifier.VerifyString(ObjectName()) &&
           VerifyOffsetRequired(verifier, VT_OBJECTPOSITION) &&
           verifier.VerifyTable(ObjectPosition()) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_02, 4) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_03, 4) &&
           VerifyOffsetRequired(verifier, VT_FIELD_04) &&
           verifier.VerifyString(Field_04()) &&
           VerifyField<uint8_t>(verifier, VT_FIELD_05, 1) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_06, 4) &&
           VerifyOffsetRequired(verifier, VT_FIELD_07) &&
           verifier.VerifyString(Field_07()) &&
           VerifyOffsetRequired(verifier, VT_FIELD_08) &&
           verifier.VerifyVector(Field_08()) &&
           verifier.VerifyVectorOfStrings(Field_08()) &&
           verifier.EndTable();
  }
};

struct TrinitySceneObjectBuilder {
  typedef TrinitySceneObject Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_ObjectName(::flatbuffers::Offset<::flatbuffers::String> ObjectName) {
    fbb_.AddOffset(TrinitySceneObject::VT_OBJECTNAME, ObjectName);
  }
  void add_ObjectPosition(::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObjectPosition> ObjectPosition) {
    fbb_.AddOffset(TrinitySceneObject::VT_OBJECTPOSITION, ObjectPosition);
  }
  void add_Field_02(uint32_t Field_02) {
    fbb_.AddElement<uint32_t>(TrinitySceneObject::VT_FIELD_02, Field_02, 0);
  }
  void add_Field_03(uint32_t Field_03) {
    fbb_.AddElement<uint32_t>(TrinitySceneObject::VT_FIELD_03, Field_03, 0);
  }
  void add_Field_04(::flatbuffers::Offset<::flatbuffers::String> Field_04) {
    fbb_.AddOffset(TrinitySceneObject::VT_FIELD_04, Field_04);
  }
  void add_Field_05(uint8_t Field_05) {
    fbb_.AddElement<uint8_t>(TrinitySceneObject::VT_FIELD_05, Field_05, 0);
  }
  void add_Field_06(uint32_t Field_06) {
    fbb_.AddElement<uint32_t>(TrinitySceneObject::VT_FIELD_06, Field_06, 0);
  }
  void add_Field_07(::flatbuffers::Offset<::flatbuffers::String> Field_07) {
    fbb_.AddOffset(TrinitySceneObject::VT_FIELD_07, Field_07);
  }
  void add_Field_08(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>>> Field_08) {
    fbb_.AddOffset(TrinitySceneObject::VT_FIELD_08, Field_08);
  }
  explicit TrinitySceneObjectBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TrinitySceneObject> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TrinitySceneObject>(end);
    fbb_.Required(o, TrinitySceneObject::VT_OBJECTNAME);
    fbb_.Required(o, TrinitySceneObject::VT_OBJECTPOSITION);
    fbb_.Required(o, TrinitySceneObject::VT_FIELD_04);
    fbb_.Required(o, TrinitySceneObject::VT_FIELD_07);
    fbb_.Required(o, TrinitySceneObject::VT_FIELD_08);
    return o;
  }
};

inline ::flatbuffers::Offset<TrinitySceneObject> CreateTrinitySceneObject(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    ::flatbuffers::Offset<::flatbuffers::String> ObjectName = 0,
    ::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObjectPosition> ObjectPosition = 0,
    uint32_t Field_02 = 0,
    uint32_t Field_03 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Field_04 = 0,
    uint8_t Field_05 = 0,
    uint32_t Field_06 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Field_07 = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<::flatbuffers::String>>> Field_08 = 0) {
  TrinitySceneObjectBuilder builder_(_fbb);
  builder_.add_Field_08(Field_08);
  builder_.add_Field_07(Field_07);
  builder_.add_Field_06(Field_06);
  builder_.add_Field_04(Field_04);
  builder_.add_Field_03(Field_03);
  builder_.add_Field_02(Field_02);
  builder_.add_ObjectPosition(ObjectPosition);
  builder_.add_ObjectName(ObjectName);
  builder_.add_Field_05(Field_05);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<TrinitySceneObject> CreateTrinitySceneObjectDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const char *ObjectName = nullptr,
    ::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObjectPosition> ObjectPosition = 0,
    uint32_t Field_02 = 0,
    uint32_t Field_03 = 0,
    const char *Field_04 = nullptr,
    uint8_t Field_05 = 0,
    uint32_t Field_06 = 0,
    const char *Field_07 = nullptr,
    const std::vector<::flatbuffers::Offset<::flatbuffers::String>> *Field_08 = nullptr) {
  auto ObjectName__ = ObjectName ? _fbb.CreateString(ObjectName) : 0;
  auto Field_04__ = Field_04 ? _fbb.CreateString(Field_04) : 0;
  auto Field_07__ = Field_07 ? _fbb.CreateString(Field_07) : 0;
  auto Field_08__ = Field_08 ? _fbb.CreateVector<::flatbuffers::Offset<::flatbuffers::String>>(*Field_08) : 0;
  return pkNX::Structures::FlatBuffers::SV::Trinity::CreateTrinitySceneObject(
      _fbb,
      ObjectName__,
      ObjectPosition,
      Field_02,
      Field_03,
      Field_04__,
      Field_05,
      Field_06,
      Field_07__,
      Field_08__);
}

struct TrinityCharacterCreationMasterComponent FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef TrinityCharacterCreationMasterComponentBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_FIELD_00 = 4,
    VT_FIELD_01 = 6,
    VT_FIELD_02 = 8,
    VT_FIELD_03 = 10,
    VT_FIELD_04 = 12,
    VT_FIELD_05 = 14,
    VT_FIELD_06 = 16,
    VT_FIELD_07 = 18,
    VT_FIELD_08 = 20,
    VT_FIELD_09 = 22,
    VT_FIELD_10 = 24,
    VT_FIELD_11 = 26,
    VT_FIELD_12 = 28,
    VT_FIELD_13 = 30,
    VT_FIELD_14 = 32,
    VT_FIELD_15 = 34,
    VT_FIELD_16 = 36
  };
  const ::flatbuffers::String *Field_00() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_00);
  }
  int8_t Field_01() const {
    return GetField<int8_t>(VT_FIELD_01, 0);
  }
  float Field_02() const {
    return GetField<float>(VT_FIELD_02, 0.0f);
  }
  float Field_03() const {
    return GetField<float>(VT_FIELD_03, 0.0f);
  }
  float Field_04() const {
    return GetField<float>(VT_FIELD_04, 0.0f);
  }
  int8_t Field_05() const {
    return GetField<int8_t>(VT_FIELD_05, 0);
  }
  float Field_06() const {
    return GetField<float>(VT_FIELD_06, 0.0f);
  }
  uint32_t Field_07() const {
    return GetField<uint32_t>(VT_FIELD_07, 0);
  }
  float Field_08() const {
    return GetField<float>(VT_FIELD_08, 0.0f);
  }
  uint32_t Field_09() const {
    return GetField<uint32_t>(VT_FIELD_09, 0);
  }
  float Field_10() const {
    return GetField<float>(VT_FIELD_10, 0.0f);
  }
  uint32_t Field_11() const {
    return GetField<uint32_t>(VT_FIELD_11, 0);
  }
  float Field_12() const {
    return GetField<float>(VT_FIELD_12, 0.0f);
  }
  int8_t Field_13() const {
    return GetField<int8_t>(VT_FIELD_13, 0);
  }
  uint32_t Field_14() const {
    return GetField<uint32_t>(VT_FIELD_14, 0);
  }
  const ::flatbuffers::Vector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::TrinityCharacterCreationMasterComponentInner>> *Field_15() const {
    return GetPointer<const ::flatbuffers::Vector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::TrinityCharacterCreationMasterComponentInner>> *>(VT_FIELD_15);
  }
  const ::flatbuffers::String *Field_16() const {
    return GetPointer<const ::flatbuffers::String *>(VT_FIELD_16);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_FIELD_00) &&
           verifier.VerifyString(Field_00()) &&
           VerifyField<int8_t>(verifier, VT_FIELD_01, 1) &&
           VerifyField<float>(verifier, VT_FIELD_02, 4) &&
           VerifyField<float>(verifier, VT_FIELD_03, 4) &&
           VerifyField<float>(verifier, VT_FIELD_04, 4) &&
           VerifyField<int8_t>(verifier, VT_FIELD_05, 1) &&
           VerifyField<float>(verifier, VT_FIELD_06, 4) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_07, 4) &&
           VerifyField<float>(verifier, VT_FIELD_08, 4) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_09, 4) &&
           VerifyField<float>(verifier, VT_FIELD_10, 4) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_11, 4) &&
           VerifyField<float>(verifier, VT_FIELD_12, 4) &&
           VerifyField<int8_t>(verifier, VT_FIELD_13, 1) &&
           VerifyField<uint32_t>(verifier, VT_FIELD_14, 4) &&
           VerifyOffsetRequired(verifier, VT_FIELD_15) &&
           verifier.VerifyVector(Field_15()) &&
           verifier.VerifyVectorOfTables(Field_15()) &&
           VerifyOffset(verifier, VT_FIELD_16) &&
           verifier.VerifyString(Field_16()) &&
           verifier.EndTable();
  }
};

struct TrinityCharacterCreationMasterComponentBuilder {
  typedef TrinityCharacterCreationMasterComponent Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_Field_00(::flatbuffers::Offset<::flatbuffers::String> Field_00) {
    fbb_.AddOffset(TrinityCharacterCreationMasterComponent::VT_FIELD_00, Field_00);
  }
  void add_Field_01(int8_t Field_01) {
    fbb_.AddElement<int8_t>(TrinityCharacterCreationMasterComponent::VT_FIELD_01, Field_01, 0);
  }
  void add_Field_02(float Field_02) {
    fbb_.AddElement<float>(TrinityCharacterCreationMasterComponent::VT_FIELD_02, Field_02, 0.0f);
  }
  void add_Field_03(float Field_03) {
    fbb_.AddElement<float>(TrinityCharacterCreationMasterComponent::VT_FIELD_03, Field_03, 0.0f);
  }
  void add_Field_04(float Field_04) {
    fbb_.AddElement<float>(TrinityCharacterCreationMasterComponent::VT_FIELD_04, Field_04, 0.0f);
  }
  void add_Field_05(int8_t Field_05) {
    fbb_.AddElement<int8_t>(TrinityCharacterCreationMasterComponent::VT_FIELD_05, Field_05, 0);
  }
  void add_Field_06(float Field_06) {
    fbb_.AddElement<float>(TrinityCharacterCreationMasterComponent::VT_FIELD_06, Field_06, 0.0f);
  }
  void add_Field_07(uint32_t Field_07) {
    fbb_.AddElement<uint32_t>(TrinityCharacterCreationMasterComponent::VT_FIELD_07, Field_07, 0);
  }
  void add_Field_08(float Field_08) {
    fbb_.AddElement<float>(TrinityCharacterCreationMasterComponent::VT_FIELD_08, Field_08, 0.0f);
  }
  void add_Field_09(uint32_t Field_09) {
    fbb_.AddElement<uint32_t>(TrinityCharacterCreationMasterComponent::VT_FIELD_09, Field_09, 0);
  }
  void add_Field_10(float Field_10) {
    fbb_.AddElement<float>(TrinityCharacterCreationMasterComponent::VT_FIELD_10, Field_10, 0.0f);
  }
  void add_Field_11(uint32_t Field_11) {
    fbb_.AddElement<uint32_t>(TrinityCharacterCreationMasterComponent::VT_FIELD_11, Field_11, 0);
  }
  void add_Field_12(float Field_12) {
    fbb_.AddElement<float>(TrinityCharacterCreationMasterComponent::VT_FIELD_12, Field_12, 0.0f);
  }
  void add_Field_13(int8_t Field_13) {
    fbb_.AddElement<int8_t>(TrinityCharacterCreationMasterComponent::VT_FIELD_13, Field_13, 0);
  }
  void add_Field_14(uint32_t Field_14) {
    fbb_.AddElement<uint32_t>(TrinityCharacterCreationMasterComponent::VT_FIELD_14, Field_14, 0);
  }
  void add_Field_15(::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::TrinityCharacterCreationMasterComponentInner>>> Field_15) {
    fbb_.AddOffset(TrinityCharacterCreationMasterComponent::VT_FIELD_15, Field_15);
  }
  void add_Field_16(::flatbuffers::Offset<::flatbuffers::String> Field_16) {
    fbb_.AddOffset(TrinityCharacterCreationMasterComponent::VT_FIELD_16, Field_16);
  }
  explicit TrinityCharacterCreationMasterComponentBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TrinityCharacterCreationMasterComponent> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TrinityCharacterCreationMasterComponent>(end);
    fbb_.Required(o, TrinityCharacterCreationMasterComponent::VT_FIELD_00);
    fbb_.Required(o, TrinityCharacterCreationMasterComponent::VT_FIELD_15);
    return o;
  }
};

inline ::flatbuffers::Offset<TrinityCharacterCreationMasterComponent> CreateTrinityCharacterCreationMasterComponent(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    ::flatbuffers::Offset<::flatbuffers::String> Field_00 = 0,
    int8_t Field_01 = 0,
    float Field_02 = 0.0f,
    float Field_03 = 0.0f,
    float Field_04 = 0.0f,
    int8_t Field_05 = 0,
    float Field_06 = 0.0f,
    uint32_t Field_07 = 0,
    float Field_08 = 0.0f,
    uint32_t Field_09 = 0,
    float Field_10 = 0.0f,
    uint32_t Field_11 = 0,
    float Field_12 = 0.0f,
    int8_t Field_13 = 0,
    uint32_t Field_14 = 0,
    ::flatbuffers::Offset<::flatbuffers::Vector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::TrinityCharacterCreationMasterComponentInner>>> Field_15 = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Field_16 = 0) {
  TrinityCharacterCreationMasterComponentBuilder builder_(_fbb);
  builder_.add_Field_16(Field_16);
  builder_.add_Field_15(Field_15);
  builder_.add_Field_14(Field_14);
  builder_.add_Field_12(Field_12);
  builder_.add_Field_11(Field_11);
  builder_.add_Field_10(Field_10);
  builder_.add_Field_09(Field_09);
  builder_.add_Field_08(Field_08);
  builder_.add_Field_07(Field_07);
  builder_.add_Field_06(Field_06);
  builder_.add_Field_04(Field_04);
  builder_.add_Field_03(Field_03);
  builder_.add_Field_02(Field_02);
  builder_.add_Field_00(Field_00);
  builder_.add_Field_13(Field_13);
  builder_.add_Field_05(Field_05);
  builder_.add_Field_01(Field_01);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<TrinityCharacterCreationMasterComponent> CreateTrinityCharacterCreationMasterComponentDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const char *Field_00 = nullptr,
    int8_t Field_01 = 0,
    float Field_02 = 0.0f,
    float Field_03 = 0.0f,
    float Field_04 = 0.0f,
    int8_t Field_05 = 0,
    float Field_06 = 0.0f,
    uint32_t Field_07 = 0,
    float Field_08 = 0.0f,
    uint32_t Field_09 = 0,
    float Field_10 = 0.0f,
    uint32_t Field_11 = 0,
    float Field_12 = 0.0f,
    int8_t Field_13 = 0,
    uint32_t Field_14 = 0,
    const std::vector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::TrinityCharacterCreationMasterComponentInner>> *Field_15 = nullptr,
    const char *Field_16 = nullptr) {
  auto Field_00__ = Field_00 ? _fbb.CreateString(Field_00) : 0;
  auto Field_15__ = Field_15 ? _fbb.CreateVector<::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::TrinityCharacterCreationMasterComponentInner>>(*Field_15) : 0;
  auto Field_16__ = Field_16 ? _fbb.CreateString(Field_16) : 0;
  return pkNX::Structures::FlatBuffers::SV::Trinity::CreateTrinityCharacterCreationMasterComponent(
      _fbb,
      Field_00__,
      Field_01,
      Field_02,
      Field_03,
      Field_04,
      Field_05,
      Field_06,
      Field_07,
      Field_08,
      Field_09,
      Field_10,
      Field_11,
      Field_12,
      Field_13,
      Field_14,
      Field_15__,
      Field_16__);
}

struct TrinityCharacterCreationMasterComponentInner FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef TrinityCharacterCreationMasterComponentInnerBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_MODELTYPE = 4,
    VT_MODELPATH = 6,
    VT_VARIANT = 8
  };
  const ::flatbuffers::String *ModelType() const {
    return GetPointer<const ::flatbuffers::String *>(VT_MODELTYPE);
  }
  const ::flatbuffers::String *ModelPath() const {
    return GetPointer<const ::flatbuffers::String *>(VT_MODELPATH);
  }
  const ::flatbuffers::String *Variant() const {
    return GetPointer<const ::flatbuffers::String *>(VT_VARIANT);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_MODELTYPE) &&
           verifier.VerifyString(ModelType()) &&
           VerifyOffset(verifier, VT_MODELPATH) &&
           verifier.VerifyString(ModelPath()) &&
           VerifyOffset(verifier, VT_VARIANT) &&
           verifier.VerifyString(Variant()) &&
           verifier.EndTable();
  }
};

struct TrinityCharacterCreationMasterComponentInnerBuilder {
  typedef TrinityCharacterCreationMasterComponentInner Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_ModelType(::flatbuffers::Offset<::flatbuffers::String> ModelType) {
    fbb_.AddOffset(TrinityCharacterCreationMasterComponentInner::VT_MODELTYPE, ModelType);
  }
  void add_ModelPath(::flatbuffers::Offset<::flatbuffers::String> ModelPath) {
    fbb_.AddOffset(TrinityCharacterCreationMasterComponentInner::VT_MODELPATH, ModelPath);
  }
  void add_Variant(::flatbuffers::Offset<::flatbuffers::String> Variant) {
    fbb_.AddOffset(TrinityCharacterCreationMasterComponentInner::VT_VARIANT, Variant);
  }
  explicit TrinityCharacterCreationMasterComponentInnerBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<TrinityCharacterCreationMasterComponentInner> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<TrinityCharacterCreationMasterComponentInner>(end);
    return o;
  }
};

inline ::flatbuffers::Offset<TrinityCharacterCreationMasterComponentInner> CreateTrinityCharacterCreationMasterComponentInner(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    ::flatbuffers::Offset<::flatbuffers::String> ModelType = 0,
    ::flatbuffers::Offset<::flatbuffers::String> ModelPath = 0,
    ::flatbuffers::Offset<::flatbuffers::String> Variant = 0) {
  TrinityCharacterCreationMasterComponentInnerBuilder builder_(_fbb);
  builder_.add_Variant(Variant);
  builder_.add_ModelPath(ModelPath);
  builder_.add_ModelType(ModelType);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<TrinityCharacterCreationMasterComponentInner> CreateTrinityCharacterCreationMasterComponentInnerDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const char *ModelType = nullptr,
    const char *ModelPath = nullptr,
    const char *Variant = nullptr) {
  auto ModelType__ = ModelType ? _fbb.CreateString(ModelType) : 0;
  auto ModelPath__ = ModelPath ? _fbb.CreateString(ModelPath) : 0;
  auto Variant__ = Variant ? _fbb.CreateString(Variant) : 0;
  return pkNX::Structures::FlatBuffers::SV::Trinity::CreateTrinityCharacterCreationMasterComponentInner(
      _fbb,
      ModelType__,
      ModelPath__,
      Variant__);
}

inline const pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObject *GetTrinitySceneObject(const void *buf) {
  return ::flatbuffers::GetRoot<pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObject>(buf);
}

inline const pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObject *GetSizePrefixedTrinitySceneObject(const void *buf) {
  return ::flatbuffers::GetSizePrefixedRoot<pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObject>(buf);
}

inline bool VerifyTrinitySceneObjectBuffer(
    ::flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObject>(nullptr);
}

inline bool VerifySizePrefixedTrinitySceneObjectBuffer(
    ::flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObject>(nullptr);
}

inline void FinishTrinitySceneObjectBuffer(
    ::flatbuffers::FlatBufferBuilder &fbb,
    ::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObject> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedTrinitySceneObjectBuffer(
    ::flatbuffers::FlatBufferBuilder &fbb,
    ::flatbuffers::Offset<pkNX::Structures::FlatBuffers::SV::Trinity::TrinitySceneObject> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace Trinity
}  // namespace SV
}  // namespace FlatBuffers
}  // namespace Structures
}  // namespace pkNX

#endif  // FLATBUFFERS_GENERATED_TRINITYSCENEOBJECT_PKNX_STRUCTURES_FLATBUFFERS_SV_TRINITY_H_
